# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

Import(['env'])

from SCons.Util import CLVar

tests = [
#    'common/clerror.t.h',
#    'common/clerror_base.t.h',
    'common/clerror_no.t.h',
    'common/exception.t.h',
#    'common/exception_base.t.h',
#    'common/exceptions.t.h',
#    'common/macros.t.h',
#    'common/shared_ptr.t.h',
    'common/types.t.h',
    'common/ndrange.t.h',
#    'common/clerror_stdexcept.t.h',
    'common/context_property_type.t.h',
#    'common/context_property_type_fwd.t.h',
#    'common/device_partition_property_type.t.h',
#    'common/device_partition_property_type_fwd.t.h',
    'common/enum2cstr.t.h',
    'common/enum2hex.t.h',
    'common/enum2name.t.h',
#    'common/std_except_ctor_arg.t.h',
#    'common/std_except_ctor_arg_fwd.t.h',
    'common/sha1.t.h',
    'common/to_string.t.h',
]

env.CxxTest('../check-libclxx_common', tests,
           LIBS = CLVar(),
           CXXTEST_CPPPATH = ['..'],
           CXXTEST_LIBPATH = env.get('LIBPATH', CLVar()),
           CXXTEST_TARGET = 'check-libclxx_common')

env.Alias('check', [ 'check-libclxx_common' ])
env.AlwaysBuild('check-libclxx_common')

# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
