#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#DH_VERBOSE = 1


# Files that are generated by filtering a template
filtered_files =

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk

# see FEATURE AREAS in dpkg-buildflags(1)
export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export LINKFLAGS=$(LDFLAGS)

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#
export DEB_CFLAGS_MAINT_APPEND  = -Wall -Werror -pedantic
export DEB_CXXFLAGS_MAINT_APPEND  = -Wall -Werror -pedantic -std=c++11

# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	  JOBS := -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# main packaging script based on dh7 syntax
%:
	dh $@

version_full := $(shell dpkg-parsechangelog | grep Version | cut -d' ' -f2)
version_upstream := $(shell echo $(version_full) | cut -d'+' -f1)
version_major := $(shell echo $(version_upstream) | cut -d'.' -f1)
version_minor := $(shell echo $(version_upstream) | cut -d'.' -f2)
version_patch := $(shell echo $(version_upstream) | cut -d'.' -f3)

PKGVERSION = $(version_major)
SOVERSION = $(version_major)


INSTBASE=$(CURDIR)/debian

clxx_libs = libclxx_app libclxx_app_clcc libclxx_app_clinfo libclxx_io \
						libclxx_cl libclxx_info libclxx_s11n

# Change library name to install target name
# Input: library name (without extensions)
lib_inst_tgt = install-$(strip $(1))

# Package name for a library
lib_pkg_name = $(subst _,-,$(1)$(PKGVERSION))

# Change library name to install dir name
# Input: library name (without extensions)
lib_inst_dir = $(subst _,-,$(INSTBASE)/$(call lib_pkg_name,$(1)))

# Change library name to install dir name
# Input: library name (without extensions)
app_inst_dir = $(subst _,-,$(INSTBASE)/$(1)$(PKGVERSION))

override_dh_auto_configure:

override_dh_auto_build:
	scons $(JOBS)

override_dh_auto_test:
	scons $(JOBS) check

override_dh_install:
	$(foreach l, $(clxx_libs), \
		scons --prefix=/usr --install-sandbox=$(call lib_inst_dir,$(l)) \
		       $(call lib_inst_tgt,$(l))-lib; \
		find $(call lib_inst_dir,$(l)) -name '*.so' -delete; \
	)
	$(foreach l, $(clxx_libs), \
		scons --prefix=/usr --install-sandbox=$(call lib_inst_dir,$(l))-dev \
		        $(call lib_inst_tgt,$(l))-headers; \
    dh_link -p$(call lib_pkg_name,$(l))-dev usr/lib/$(l).so.$(SOVERSION) \
						usr/lib/$(l).so; \
	)
	scons --prefix=/usr --install-sandbox=$(call lib_inst_dir,libclxx_common)-dev\
		      install-libclxx_common-headers;
	scons --prefix=/usr --install-sandbox=$(call app_inst_dir,clxx_tools) \
		      install-app-clcc install-app-clinfo;
	dh_install

override_dh_auto_clean:
	scons -c
	rm -rf build/
	rm -f src/config.log
	find site_scons lib -name '*.py[cod]' -type f -delete
	find site_scons lib -name '__pycache__' -type d | xargs rm -rf

# debmake generated override targets
# This is example for Cmake (See http://bugs.debian.org/641051 )
#override_dh_auto_configure:
#	dh_auto_configure -- \
#	-DCMAKE_LIBRARY_PATH=$(DEB_HOST_MULTIARCH)
