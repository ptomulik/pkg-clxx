#
# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

Import(['env'])

doxyfile = env.Doxyfile(
    INPUT                   = ['../../lib/clxx', '../../examples/clxx', '.'],
    RECURSIVE               = True,
    PROJECT_NAME            = "clxx",
    PROJECT_NUMBER          = env.subst('$CLXX_VERSION'),
    PROJECT_BRIEF           = 'C++ wrappers for OpenCL',
    OUTPUT_DIRECTORY        = '.',
    STRIP_FROM_PATH         = '../../..',
    STRIP_FROM_INC_PATH     = ['../../lib', '../../examples'],
    EXAMPLE_PATH            = '../../examples',
    FILTER_PATTERNS         = { '*.cpp' : env.File('../../../bin/doxycppfilter'),
                                '*.hpp' : env.File('../../../bin/doxycppfilter'),
                                '*.h'   : env.File('../../../bin/doxycppfilter') },
    FILTER_SOURCE_FILES     = True,
    FILTER_SOURCE_PATTERNS  = { '*.cpp' : env.File('../../../bin/doxycppfilter'),
                                '*.hpp' : env.File('../../../bin/doxycppfilter'),
                                '*.h'   : env.File('../../../bin/doxycppfilter') },
    ENUM_VALUES_PER_LINE    = 0,
    ENABLE_PREPROCESSING    = True,
    MACRO_EXPANSION         = True,
    EXPAND_ONLY_PREDEF      = True,
    HTML_EXTRA_STYLESHEET   = env.File('custom.css'),
    GENERATE_TREEVIEW       = True,
    PREDEFINED              = [ 'DOXYGEN',
                                'CL_VERSION_1_0',
                                'CL_VERSION_1_1',
                                'CL_VERSION_1_2',
                                'CL_VERSION_2_0',
                                'CL_CALLBACK=\"\"',
                                'BOOST_CLASS_VERSION(__klass,__ver)=',
                                'cl_khr_gl_sharing',
                                'cl_khr_dx9_media_sharing',
                                'cl_khr_d3d10_sharing',
                                'cl_khr_d3d11_sharing',
                                'CLXX_OPENCL_ALLOWED',
                                '_WIN32' ]
)

doc = env.Doxygen(doxyfile)

env.Clean('..', '.')
env.Ignore('..', '.')
env.Alias('api-doc', '.')
tgt = env.AlwaysBuild(env.Alias('api-doc'))
env.Depends(tgt, env.Glob('../../../bin/doxy*'))

# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
